{"ast":null,"code":"var _jsxFileName = \"/home/heroo/myfirstreact/src/components/map.js\";\n\n/*\nimport React, { Component } from \"react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst MyMapComponent = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap defaultZoom={8} defaultCenter={{ lat: 30.7333, lng: 76.7794 }}>\n      {props.isMarkerShown && (\n        <Marker position={{ lat: 30.7333, lng: 76.7794 }} />\n      )}\n    </GoogleMap>\n  ))\n);\n\nclass Map extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"text-center\">\n          <h1>GOOGLE MAPS </h1>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              MAPS\n              <div>\n                <MyMapComponent\n                  isMarkerShown\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAN7mwyR_B3NDDLnuwkLds1RU9IUSBklc8&v=3.exp&libraries=geometry,drawing,places\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={<div style={{ height: `400px` }} />}\n                  mapElement={<div style={{ height: `100%` }} />}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n*/\nimport React, { useState, useEffect } from \"react\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\n\nfunction Maps() {\n  const [selectedPark, setSelectedPark] = useState(null);\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n  return React.createElement(GoogleMap, {\n    defaultZoom: 10,\n    defaultCenter: {\n      lat: 45.4211,\n      lng: -75.6903\n    },\n    defaultOptions: {\n      styles: mapStyles\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, parkData.features.map(park => React.createElement(Marker, {\n    key: park.properties.PARK_ID,\n    position: {\n      lat: park.geometry.coordinates[1],\n      lng: park.geometry.coordinates[0]\n    },\n    onClick: () => {\n      setSelectedPark(park);\n    },\n    icon: {\n      url: `/skateboarding.svg`,\n      scaledSize: new window.google.maps.Size(25, 25)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), selectedPark && React.createElement(InfoWindow, {\n    onCloseClick: () => {\n      setSelectedPark(null);\n    },\n    position: {\n      lat: selectedPark.geometry.coordinates[1],\n      lng: selectedPark.geometry.coordinates[0]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, selectedPark.properties.NAME), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, selectedPark.properties.DESCRIPTIO))));\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\nexport default function App() {\n  return React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(MapWrapped, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`,\n    loadingElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }),\n    containerElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }),\n    mapElement: React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/heroo/myfirstreact/src/components/map.js"],"names":["React","useState","useEffect","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","mapStyles","Maps","selectedPark","setSelectedPark","listener","e","key","window","addEventListener","removeEventListener","lat","lng","styles","parkData","features","map","park","properties","PARK_ID","geometry","coordinates","url","scaledSize","google","maps","Size","NAME","DESCRIPTIO","MapWrapped","Map","App","width","height","process","env","REACT_APP_GOOGLE_KEY"],"mappings":"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","sourcesContent":["\n/*\nimport React, { Component } from \"react\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst MyMapComponent = withScriptjs(\n  withGoogleMap(props => (\n    <GoogleMap defaultZoom={8} defaultCenter={{ lat: 30.7333, lng: 76.7794 }}>\n      {props.isMarkerShown && (\n        <Marker position={{ lat: 30.7333, lng: 76.7794 }} />\n      )}\n    </GoogleMap>\n  ))\n);\n\nclass Map extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"text-center\">\n          <h1>GOOGLE MAPS </h1>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              MAPS\n              <div>\n                <MyMapComponent\n                  isMarkerShown\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAN7mwyR_B3NDDLnuwkLds1RU9IUSBklc8&v=3.exp&libraries=geometry,drawing,places\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={<div style={{ height: `400px` }} />}\n                  mapElement={<div style={{ height: `100%` }} />}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n*/import React, { useState, useEffect } from \"react\";\nimport {\n    withGoogleMap,\n    withScriptjs,\n    GoogleMap,\n    Marker,\n    InfoWindow\n  } from \"react-google-maps\";\n  import mapStyles from \"./mapStyles\";\n  \n  function Maps() {\n    const [selectedPark, setSelectedPark] = useState(null);\n  \n    useEffect(() => {\n      const listener = e => {\n        if (e.key === \"Escape\") {\n          setSelectedPark(null);\n        }\n      };\n      window.addEventListener(\"keydown\", listener);\n  \n      return () => {\n        window.removeEventListener(\"keydown\", listener);\n      };\n    }, []);\n  \n    return (\n      <GoogleMap\n        defaultZoom={10}\n        defaultCenter={{ lat: 45.4211, lng: -75.6903 }}\n        defaultOptions={{ styles: mapStyles }}\n      >\n        {parkData.features.map(park => (\n          <Marker\n            key={park.properties.PARK_ID}\n            position={{\n              lat: park.geometry.coordinates[1],\n              lng: park.geometry.coordinates[0]\n            }}\n            onClick={() => {\n              setSelectedPark(park);\n            }}\n            icon={{\n              url: `/skateboarding.svg`,\n              scaledSize: new window.google.maps.Size(25, 25)\n            }}\n          />\n        ))}\n  \n        {selectedPark && (\n          <InfoWindow\n            onCloseClick={() => {\n              setSelectedPark(null);\n            }}\n            position={{\n              lat: selectedPark.geometry.coordinates[1],\n              lng: selectedPark.geometry.coordinates[0]\n            }}\n          >\n            <div>\n              <h2>{selectedPark.properties.NAME}</h2>\n              <p>{selectedPark.properties.DESCRIPTIO}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    );\n  }\n  \n  const MapWrapped = withScriptjs(withGoogleMap(Map));\n  \n  export default function App() {\n    return (\n      <div style={{ width: \"100vw\", height: \"100vh\" }}>\n        <MapWrapped\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${\n            process.env.REACT_APP_GOOGLE_KEY\n          }`}\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `100%` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}